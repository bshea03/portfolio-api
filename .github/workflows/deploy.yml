name: Build, Test, and Deploy

on:
  push:
    branches: [main]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    environment: dev

    env:
      env: dev
      API_KEY: ${{ secrets.API_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Generate environment files
      run: |
        echo "API_KEY=${{ secrets.API_KEY }}" > .env.dev
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.dev
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.dev
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.dev
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.dev
        echo "APP_ENV=dev" >> .env.dev

        echo "API_KEY=${{ secrets.TEST_API_KEY }}" > .env.test
        echo "DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}" >> .env.test
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.test
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.test
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.test
        echo "APP_ENV=test" >> .env.test
    - name: Start dev container
      run: make up env=dev
    - name: Run tests
      run: make test
    - name: Tear down dev container
      run: make down

  deploy:
    name: Deploy to Droplet
    needs: build-test
    runs-on: ubuntu-latest
    environment: prod
    env:
      env: prod
      API_KEY: ${{ secrets.API_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Copy files to Droplet
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        source: "."
        target: "~/portfolio-api"

    - name: SSH into Droplet and run prod container
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        script: |
          cd ~/portfolio-api
          echo "API_KEY=${{ secrets.API_KEY }}" > .env.prod
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.prod
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.prod
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.prod
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.prod
          echo "APP_ENV=prod" >> .env.prod
          make up env=prod
          make migrate 
